local NetworkAccess = coroutine.create(function()
settings().Physics.AllowSleep = false
while true do game:GetService("RunService").RenderStepped:Wait()
for _,Players in next, game:GetService("Players"):GetChildren() do
if Players ~= game:GetService("Players").LocalPlayer then
Players.MaximumSimulationRadius = 0.1 Players.SimulationRadius = 0 end end
game:GetService("Players").LocalPlayer.MaximumSimulationRadius = math.pow(math.huge,math.huge)
game:GetService("Players").LocalPlayer.SimulationRadius = math.huge*math.huge end end)
coroutine.resume(NetworkAccess)






plr = game.Players.LocalPlayer
dead = false
char = plr.Character

gun = char["BladeMasterAccessory"]
ghandle = gun.Handle
ghandle.AccessoryWeld:Destroy()

bullet = char["ShadowBladeMasterAccessory"]
bhandle = bullet.Handle
bhandle.SpecialMesh:Destroy()
wait()
bullet.Parent = workspace

mouse = plr:GetMouse()
head = char.Head
camera = workspace.CurrentCamera
lt = true
ltt = false

local function IsFirstPerson()
     return (head.CFrame.p - camera.CFrame.p).Magnitude < 1
end

     bbv = Instance.new("BodyVelocity",bhandle)

     rarm = char["Right Arm"]
     larm = char["Left Arm"]
     torso = char.Torso
     
     torso["Right Shoulder"]:Destroy()
     torso["Left Shoulder"]:Destroy()
     
     larm.LeftShoulderAttachment:Destroy()
     rarm.RightShoulderAttachment:Destroy()
     
     l = Instance.new("Attachment",larm)
     l.Rotation = Vector3.new(-90,20,0)
     l.Position = Vector3.new(1,1,0.5)
     
     r = Instance.new("Attachment",rarm)
     r.Rotation = Vector3.new(-90,-25,0)
     r.Position = Vector3.new(-1,0.5,0.5)
     
     t = Instance.new("Attachment",torso)
     --rarm
     rap = Instance.new("AlignPosition",rarm)
     rap.Attachment0 = r
     rap.Attachment1 = t
     rap.RigidityEnabled = true
     
     rao = Instance.new("AlignOrientation",rarm)
     rao.Attachment0 = r
     rao.Attachment1 = t
     rao.RigidityEnabled = true
     
     --larm
     
     
     
     
     lap = Instance.new("AlignPosition",larm)
     lap.Attachment0 = l
     lap.Attachment1 = t
     lap.RigidityEnabled = true
     
     lao = Instance.new("AlignOrientation",larm)
     lao.Attachment0 = l
     lao.Attachment1 = t
     lao.RigidityEnabled = true
     
-- gun

     h = Instance.new("Attachment",ghandle)
     h.Rotation = Vector3.new(-90,130,110)
     h.Position = Vector3.new(0.5,0,0.5)
     
     lg = Instance.new("Attachment",larm)
     lg.Rotation = Vector3.new(0,0,0)
     lg.Position = Vector3.new(0,0,0)

     gap = Instance.new("AlignPosition",ghandle)
     gap.Attachment0 = h
     gap.Attachment1 = lg
     gap.RigidityEnabled = true
     
     gao = Instance.new("AlignOrientation",ghandle)
     gao.Attachment0 = h
     gao.Attachment1 = lg
     gao.RigidityEnabled = true
     
     
     mouse.Button1Down:Connect(function()
         if dead == false then
        lt = false
        ltt = true
        
        
        h.Rotation = Vector3.new(-90,125,115)
             
        l.Position = Vector3.new(1,0.5,0.5)
        l.Rotation = Vector3.new(-95,25,0)
        
        r.Position = Vector3.new(-1,0,0.5)
        r.Rotation = Vector3.new(-95,-33,0)
        wait(0.13)
                h.Rotation = Vector3.new(-90,130,110)
        
        l.Position = Vector3.new(1,1,0.5)
        l.Rotation = Vector3.new(-90,20,0)
        
        r.Position = Vector3.new(-1,0.5,0.5)
        r.Rotation = Vector3.new(-90,-25,0)
        ltt = false
             bbav = Instance.new("BodyAngularVelocity",bhandle)
     bbav.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
     bbav.P = 1000000000000000000000000000
     bbav.AngularVelocity = Vector3.new(10000000000000000000000000000000,100000000000000000000000000,100000000000000000)
        if game.Players:GetPlayerFromCharacter(mouse.Target.Parent) then
              repeat 
            game:GetService("RunService").RenderStepped:Wait()
            bhandle.Position = mouse.Target.Parent.HumanoidRootPart.CFrame.p
            wait(0.23)
            until char.Humanoid.Health == 100 or char.Humanoid.Health == 0
        elseif game.Players:GetPlayerFromCharacter(mouse.Target.Parent.Parent) then
            repeat 
            game:GetService("RunService").RenderStepped:Wait()
            bhandle.Position = mouse.Target.Parent.Parent.HumanoidRootPart.CFrame.p
            wait(0.23)
            until char.Humanoid.Health == 100 or char.Humanoid.Health == 0
            
            else
        repeat 
        game:GetService("RunService").RenderStepped:Wait()
        bhandle.Position = mouse.Hit.p
        wait(0.23)
        until char.Humanoid.Health == 100 or char.Humanoid.Health == 0
        end
        wait()
        lt = true
         end
         end)
         
     char.Humanoid.Died:Connect(function()
         dead = true
     end)
     repeat 
         game:GetService("RunService").RenderStepped:Wait()
         if dead == false and bhandle.CanCollide == true then
         bhandle.CanCollide = false
         end
         if lt == true and dead == false then
         bhandle.CFrame = char.Head.CFrame + Vector3.new(0,-15,0)
         elseif ltt == true and dead == false then
        bhandle.CFrame = ghandle.CFrame * CFrame.new(-1.7,-2,0)
        bhandle.Rotation = char.HumanoidRootPart.Rotation
         end
    until char.Humanoid.Health == 0